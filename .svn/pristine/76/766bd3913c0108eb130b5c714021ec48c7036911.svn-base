package baseHelper;


import java.io.File;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.phantomjs.PhantomJSDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;

public class BrowserLauncher {

	public static WebDriver driver ;

	@BeforeMethod
	public void LaunchBrowser() {
		System.out.println("Called openBrowser");

		String OS = System.getProperty("os.name").toLowerCase();

		System.err.println("OS is + " + OS);

		if (ReadPropertiesFile.browser.equals("firefox"))
		{

			//Currently using v0.16.1 geckodriver
			System.err.println(ReadPropertiesFile.browser);

			if(OS.contains("mac"))
			{
				System.setProperty("webdriver.gecko.driver", "src/test/resources/mac_geckodriver");
			}
			else if(OS.contains("linux")||OS.contains("ubuntu"))
			{
				System.setProperty("webdriver.gecko.driver", "src/test/resources/linux_geckodriver");
			}

			else if(OS.contains("windows"))
			{
				System.setProperty("webdriver.gecko.driver", "src/test/resources/win64_geckodriver.exe");
			}

			driver = new FirefoxDriver();

			driver.manage().deleteAllCookies();
		}

		else if (ReadPropertiesFile.browser.equals("chrome"))
		{

			if(OS.contains("mac"))
			{
				System.setProperty("webdriver.chrome.driver", "src/test/resources/mac_chromedriver");

				ChromeOptions chromeOptions = new ChromeOptions();

				chromeOptions.addArguments("--kiosk");

				driver = new ChromeDriver(chromeOptions);

			}
			else if(OS.contains("linux")||OS.contains("ubuntu"))
			{

			}

			else if(OS.contains("windows"))
			{
				System.setProperty("webdriver.chrome.driver", "src/test/resources/win32_chromedriver.exe");

				ChromeOptions chromeOptions = new ChromeOptions();

				chromeOptions.addArguments("--start-maximized");

				driver = new ChromeDriver(chromeOptions);

				driver.manage().deleteAllCookies();
			}

			driver.manage().window().maximize();

		}
		else if (ReadPropertiesFile.browser.equals("headless"))
		{

			if(OS.contains("mac"))
			{
				File src = new File("src/test/resources/phantomjs_mac");

				System.setProperty("phantomjs.binary.path", src.getAbsolutePath());

			}
			else if(OS.contains("windows"))
			{
				File src = new File("src/test/resources/phantomjs.exe");

				System.setProperty("phantomjs.binary.path", src.getAbsolutePath());
			}
			else if(OS.contains("linux")||OS.contains("ubuntu"))
			{
				File src = new File("src/test/resources/phantomjs_linux");

				System.setProperty("phantomjs.binary.path", src.getAbsolutePath());
			}

		}

		driver.get(ReadPropertiesFile.baseURL);

		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);

	}

	@AfterMethod
	public void QuitBrowser() {

		try {

			driver.close();

			driver.quit();

		} catch (Exception e) {

		}

	}

}
